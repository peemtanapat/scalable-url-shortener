Transform: AWS::Serverless-2016-10-31
Resources:
  Api:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub
        - ${ResourceName} From Stack ${AWS::StackName}
        - ResourceName: Api
      StageName: Prod
      DefinitionBody:
        openapi: '3.0'
        info: {}
        paths:
          /api/health:
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${RedirectAPI.Arn}/invocations
              responses: {}
          /api/v1/urls:
            post:
              responses: {}
          /{shortCode}:
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${RedirectAPI.Arn}/invocations
              responses: {}
      EndpointConfiguration: REGIONAL
      TracingEnabled: true
      Cors:
        MaxAge: 5
  RedirectAPI:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: RedirectAPI
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      PackageType: Image
      Architectures:
        - arm64
      ImageUri: 905418472050.dkr.ecr.ap-southeast-1.amazonaws.com/url-shortener-v1:redirect-api
      Events:
        ApiGETapihealth:
          Type: Api
          Properties:
            Path: /api/health
            Method: GET
            RestApiId: !Ref Api
        ApiGETshortCode:
          Type: Api
          Properties:
            Path: /{shortCode}
            Method: GET
            RestApiId: !Ref Api
  RedirectAPILogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${RedirectAPI}